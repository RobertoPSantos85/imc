<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>